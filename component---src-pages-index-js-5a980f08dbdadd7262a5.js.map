{"version":3,"file":"component---src-pages-index-js-5a980f08dbdadd7262a5.js","mappings":"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","sources":["webpack://myblog/./src/components/title/index.js","webpack://myblog/./src/components/content-Item/index.js","webpack://myblog/./src/components/pagination/index.js","webpack://myblog/./src/components/content-list/index.js","webpack://myblog/./src/pages/index.js","webpack://myblog/./src/hooks/usePosts.js"],"sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Title = () => {\n  const titleQuery = useStaticQuery(graphql`\n    query TitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const { title } = titleQuery.site.siteMetadata;\n\n  return <div className=\"title\">{title}</div>;\n};\nexport default Title;\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport qs from \"query-string\";\n\nimport { CATEGORY, CONTENTITEM } from \"../../constants\";\nimport \"./index.scss\";\n\nexport const ContentItem = ({ post }) => {\n  const { frontmatter, fields, excerpt } = post.node;\n  const { TITLE, SUBTITLE, DATE, CONTENT } = CONTENTITEM;\n  const handleClick = () => {\n    const category = CATEGORY.ALL;\n    navigate(`${fields.slug}?${qs.stringify({ category })}#blog`);\n  };\n\n  return (\n    <div\n      className=\"contentItem\"\n      onClick={handleClick}\n      onKeyDown={handleClick}\n      role=\"presentation\"\n    >\n      {TITLE && <h4 className=\"h4 itemTitle\">{frontmatter.title}</h4>}\n      {SUBTITLE && <p className=\"h5 itemSubTitle\">{frontmatter.subtitle}</p>}\n      {CONTENT && (\n        <div\n          className=\"body-1 itemText\"\n          dangerouslySetInnerHTML={{ __html: excerpt }}\n        />\n      )}\n      {DATE && <p className=\"body-2 itemDate\">{frontmatter.date}</p>}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ChevronLeft } from \"../../../assets/icons/chevronLeft\";\nimport { ChevronRight } from \"../../../assets/icons/chevronRight\";\nimport { DOTS } from \"../../constants/page\";\nimport \"./index.scss\";\n\nexport const Pagination = (props) => {\n  const { paginationRange, currentPage, handlePageChange } = props;\n\n  let lastPage =\n    paginationRange && paginationRange[paginationRange?.length - 1];\n\n  if (currentPage === 0 || paginationRange?.length < 2) {\n    return null;\n  }\n\n  const handleNext = () => {\n    handlePageChange(currentPage + 1);\n  };\n  const handlePrev = () => {\n    handlePageChange(currentPage - 1);\n  };\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"paginationButtons\">\n        <li\n          className=\"paginationArrow\"\n          data-disabled={currentPage === 1}\n          onClick={handlePrev}\n        >\n          <ChevronLeft />\n        </li>\n        <ul className=\"paginationPages\">\n          {paginationRange?.map((page, index) => {\n            if (page === DOTS) {\n              return <li className=\"paginationDots\">&#8230;</li>;\n            }\n            return (\n              <li\n                key={index}\n                className=\"paginationPage\"\n                data-current={currentPage === page}\n                onClick={() => handlePageChange(page)}\n              >\n                {page}\n              </li>\n            );\n          })}\n        </ul>\n        <li\n          className=\"paginationArrow\"\n          data-disabled={currentPage === lastPage}\n          onClick={handleNext}\n        >\n          <ChevronRight />\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./index.scss\";\nimport { ContentItem } from \"../content-Item\";\nimport { Pagination } from \"../pagination\";\nimport { PAGE } from \"../../constants\";\n\nconst ContentList = ({\n  filteredPosts,\n  paginationRange,\n  currentPage,\n  handlePageChange,\n}) => {\n  const firstPageIndex = (currentPage - 1) * PAGE.PAGESIZE;\n  const lastPageIndex = firstPageIndex + PAGE.PAGESIZE;\n  let finalPosts = filteredPosts.slice(firstPageIndex, lastPageIndex);\n\n  return (\n    <div>\n      <div className=\"listContainer\">\n        {finalPosts.map((post, index) => (\n          <ContentItem key={index} post={post} />\n        ))}\n      </div>\n      <Pagination\n        paginationRange={paginationRange}\n        currentPage={currentPage}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n};\nexport default ContentList;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Title from \"../components/title\";\nimport ContentList from \"../components/content-list\";\nimport { PAGE } from \"../constants/page\";\n\nimport { usePagination } from \"../hooks/usePagination\";\nimport { useCategory } from \"../hooks/useCategory\";\nimport { usePosts } from \"../hooks/usePosts\";\n\nimport { Layout } from \"../layout\";\nimport \"../styles/_typography.scss\";\nimport \"./index.scss\";\n\nexport default function Page({ data }) {\n  const posts = data.allMarkdownRemark.edges;\n  const { handleSelect, selectedCategory } = useCategory();\n  const { filteredPosts } = usePosts({ posts, selectedCategory });\n  const { paginationRange, currentPage, handlePageChange } = usePagination({\n    totalCount: filteredPosts.length,\n    siblingCount: PAGE.SIBLINGCOUNT,\n    pageSize: PAGE.PAGESIZE,\n  });\n\n  return (\n    <Layout\n      handlePageChange={handlePageChange}\n      handleSelect={handleSelect}\n      selectedCategory={selectedCategory}\n      currentPage={currentPage}\n    >\n      <div className=\"homeContainer\">\n        <Title />\n        {/* <Bio /> */}\n        <hr />\n        <ContentList\n          filteredPosts={filteredPosts}\n          paginationRange={paginationRange}\n          currentPage={currentPage}\n          handlePageChange={handlePageChange}\n        />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query PageQuery {\n    allMarkdownRemark(\n      filter: { frontmatter: { title: { ne: \"null\" }, draft: { ne: true } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 300, truncate: true)\n          frontmatter {\n            title\n            subtitle\n            draft\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import { useMemo } from \"react\";\nimport { CATEGORY } from \"../constants/category\";\n\nexport const usePosts = ({ posts, selectedCategory }) => {\n  const splitedSearch = selectedCategory?.split(\"/\");\n  const isRootDirectory = splitedSearch?.length <= 1;\n\n  const filteredPosts = useMemo(\n    () =>\n      posts.filter(({ node }) => {\n        let slug = node.fields.slug.toLowerCase();\n        let splitedSlug = slug?.split(\"/\").filter(Boolean);\n\n        return (\n          selectedCategory === CATEGORY.ALL ||\n          (isRootDirectory && splitedSearch?.[0] === splitedSlug[0]) ||\n          (!isRootDirectory &&\n            splitedSearch?.[0] === splitedSlug[0] &&\n            slug.includes(selectedCategory))\n        );\n      }),\n    [selectedCategory]\n  );\n\n  return { filteredPosts };\n};\n"],"names":["titleQuery","useStaticQuery","title","site","siteMetadata","className","ContentItem","post","frontmatter","fields","excerpt","node","TITLE","SUBTITLE","DATE","CONTENT","CONTENTITEM","handleClick","category","CATEGORY","navigate","slug","qs","onClick","onKeyDown","role","subtitle","dangerouslySetInnerHTML","__html","date","Pagination","props","paginationRange","currentPage","handlePageChange","lastPage","length","map","page","index","DOTS","key","filteredPosts","firstPageIndex","PAGE","lastPageIndex","finalPosts","slice","Page","data","posts","allMarkdownRemark","edges","handleSelect","selectedCategory","useCategory","splitedSearch","split","isRootDirectory","useMemo","filter","toLowerCase","splitedSlug","Boolean","includes","usePosts","usePagination","totalCount","siblingCount","pageSize"],"sourceRoot":""}