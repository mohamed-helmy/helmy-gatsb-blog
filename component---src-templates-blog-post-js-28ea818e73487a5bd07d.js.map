{"version":3,"file":"component---src-templates-blog-post-js-28ea818e73487a5bd07d.js","mappings":"oLAuDA,MAjDY,KACV,MAAMA,EAAc,MAClBC,EAAAA,EAAAA,IAAS,SAAS,EAGdC,GAAWC,EAAAA,EAAAA,IAAe,cAkB1B,OAAEC,EAAM,IAAEC,GAAQH,EAASI,KAAKC,aAEtC,OACE,uBAAKC,UAAU,gBACb,gBAAC,IAAK,CACJA,UAAU,WACVC,MAAOP,EAASQ,OAAOC,gBAAgBF,MACvCG,IAAKR,EACLS,QAAQ,IAEV,uBAAKL,UAAU,cACb,2BACE,wBACEA,UAAU,UACVM,QAASd,EACTe,UAAWf,EACXgB,KAAK,gBACN,IACGZ,IAGN,qBAAGI,UAAU,WAAWH,IAEtB,ECzCV,MARoB,IAAkB,IAAjB,QAAEY,GAAS,EAC9B,OACE,uBACET,UAAU,qBACVU,wBAAyB,CAAEC,OAAQF,IACnC,ECGN,MARmB,IAAe,IAAd,KAAEG,GAAM,EAC1B,OACE,uBAAKZ,UAAU,cACb,uBAAKA,UAAU,gBAAgBY,EAAKC,OACpC,uBAAKb,UAAU,mBAAmBY,EAAKE,MACnC,E,8BCuCV,MAvCuB,IAAiC,IAAhC,KAAEF,EAAI,iBAAEG,GAAkB,EAChD,MAAM,KAAEC,EAAI,SAAEC,GAAaL,EACrBM,GAAWD,aAAQ,EAARA,EAAUE,YAAYN,QAAS,GAC1CO,GAAYJ,aAAI,EAAJA,EAAMG,YAAYN,QAAS,GAEvCrB,EAAe6B,IACnB,MAAMC,EAAWP,GACjBtB,EAAAA,EAAAA,IAAY4B,EAAI,IAAIE,EAAAA,UAAa,CAAED,aAAW,QAAQ,EAGxD,OACE,uBAAKtB,UAAU,kBACb,uBACEM,QAAS,KACPd,EAAYyB,aAAQ,EAARA,EAAUO,OAAOH,KAAK,GAGnCJ,GACC,uBAAKjB,UAAU,iBACb,gBAAC,IAAW,MACXkB,IAIP,uBACEZ,QAAS,KACPd,EAAYwB,aAAI,EAAJA,EAAMQ,OAAOH,KAAK,GAG/BL,GACC,uBAAKhB,UAAU,iBACZoB,EACD,gBAAC,IAAY,QAIf,E,sCCEV,MA/BiB,IAA4B,IAA3B,KAAER,EAAI,YAAEa,GAAa,EACrC,MAAM,eAAEC,EAAc,kBAAEC,GAAsBf,GACxC,YAAEO,EAAW,KAAES,GAASF,GACxB,aAAEG,EAAY,iBAAEd,IAAqBe,EAAAA,EAAAA,MACrC,YAAEC,EAAW,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAc,CACtDC,WAAYP,EAAkBO,WAC9BC,aAAcC,EAAAA,GAAAA,aACdC,SAAUD,EAAAA,GAAAA,WAGZ,OACE,gBAAC,IAAM,CACLJ,iBAAkBA,EAClBH,aAAcA,EACdd,iBAAkBA,EAClBgB,YAAaA,GAEb,uBAAK/B,UAAU,qBACb,gBAAC,EAAU,CAACY,KAAMO,IAClB,gBAAC,EAAW,CAACV,QAASmB,IACtB,gBAAC,EAAc,CACbhB,KAAMa,EACNV,iBAAkBA,IAEpB,2BACA,gBAAC,EAAG,OAEC,C","sources":["webpack://myblog/./src/components/bio/index.js","webpack://myblog/./src/components/post-content/index.js","webpack://myblog/./src/components/post-header/index.js","webpack://myblog/./src/components/post-navigation/index.js","webpack://myblog/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\";\nimport Image from \"gatsby-image\";\nimport { graphql, navigate, useStaticQuery } from \"gatsby\";\n\nimport \"./index.scss\";\n\nconst Bio = () => {\n  const handleClick = () => {\n    navigate(\"/about\");\n  };\n\n  const bioQuery = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(relativePath: { regex: \"/profile.jpeg/\" }) {\n        childImageSharp {\n          fixed(width: 72, height: 72) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          bio\n          githubUrl\n        }\n      }\n    }\n  `);\n  const { author, bio } = bioQuery.site.siteMetadata;\n\n  return (\n    <div className=\"bioContainer\">\n      <Image\n        className=\"bioImage\"\n        fixed={bioQuery.avatar.childImageSharp.fixed}\n        alt={author}\n        fadeIn={true}\n      />\n      <div className=\"bioContent\">\n        <div>\n          <span\n            className=\"bioLink\"\n            onClick={handleClick}\n            onKeyDown={handleClick}\n            role=\"presentation\"\n          >\n            @{author}\n          </span>\n        </div>\n        <p className=\"bioText\">{bio}</p>\n      </div>\n    </div>\n  );\n};\nexport default Bio;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst PostContent = ({ content }) => {\n  return (\n    <div\n      className=\"body-1 postContent\"\n      dangerouslySetInnerHTML={{ __html: content }}\n    />\n  );\n};\nexport default PostContent;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst PostHeader = ({ data }) => {\n  return (\n    <div className=\"postHeader\">\n      <div className=\"h2 postTitle\">{data.title}</div>\n      <div className=\"body-2 postDate\">{data.date}</div>\n    </div>\n  );\n};\nexport default PostHeader;\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport qs from \"query-string\";\n\nimport \"./index.scss\";\nimport { ChevronLeft } from \"../../../assets/icons/chevronLeft\";\nimport { ChevronRight } from \"../../../assets/icons/chevronRight\";\n\nconst PostNavigation = ({ data, selectedCategory }) => {\n  const { next, previous } = data;\n  const preTitle = previous?.frontmatter.title || \"\";\n  const nextTitle = next?.frontmatter.title || \"\";\n\n  const handleClick = (slug) => {\n    const category = selectedCategory;\n    navigate(`${slug}?${qs.stringify({ category })}#blog`);\n  };\n\n  return (\n    <div className=\"postNavigation\">\n      <div\n        onClick={() => {\n          handleClick(previous?.fields.slug);\n        }}\n      >\n        {previous && (\n          <div className=\"postNavButton\">\n            <ChevronLeft />\n            {preTitle}\n          </div>\n        )}\n      </div>\n      <div\n        onClick={() => {\n          handleClick(next?.fields.slug);\n        }}\n      >\n        {next && (\n          <div className=\"postNavButton\">\n            {nextTitle}\n            <ChevronRight />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default PostNavigation;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport PostContent from \"../components/post-content\";\nimport PostHeader from \"../components/post-header\";\nimport PostNavigation from \"../components/post-navigation\";\n\nimport { useCategory } from \"../hooks/useCategory\";\nimport { usePagination } from \"../hooks/usePagination\";\n\nimport { PAGE } from \"../constants\";\nimport { Layout } from \"../layout\";\nimport \"./blog-post.scss\";\n\nconst BlogPost = ({ data, pageContext }) => {\n  const { markdownRemark, allMarkdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { handleSelect, selectedCategory } = useCategory();\n  const { currentPage, handlePageChange } = usePagination({\n    totalCount: allMarkdownRemark.totalCount,\n    siblingCount: PAGE.SIBLINGCOUNT,\n    pageSize: PAGE.PAGESIZE,\n  });\n\n  return (\n    <Layout\n      handlePageChange={handlePageChange}\n      handleSelect={handleSelect}\n      selectedCategory={selectedCategory}\n      currentPage={currentPage}\n    >\n      <div className=\"templateContainer\">\n        <PostHeader data={frontmatter} />\n        <PostContent content={html} />\n        <PostNavigation\n          data={pageContext}\n          selectedCategory={selectedCategory}\n        />\n        <hr />\n        <Bio />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPost;\n\nexport const blogQuery = graphql`\n  query BlogQuery($slug: String!) {\n    allMarkdownRemark {\n      totalCount\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["handleClick","navigate","bioQuery","useStaticQuery","author","bio","site","siteMetadata","className","fixed","avatar","childImageSharp","alt","fadeIn","onClick","onKeyDown","role","content","dangerouslySetInnerHTML","__html","data","title","date","selectedCategory","next","previous","preTitle","frontmatter","nextTitle","slug","category","qs","fields","pageContext","markdownRemark","allMarkdownRemark","html","handleSelect","useCategory","currentPage","handlePageChange","usePagination","totalCount","siblingCount","PAGE","pageSize"],"sourceRoot":""}